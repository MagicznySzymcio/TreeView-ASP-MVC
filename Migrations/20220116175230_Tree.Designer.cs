// <auto-generated />
using System;
using Drzewo.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace TreeView_ASP_MVC.Migrations
{
    [DbContext(typeof(TreeDbContext))]
    [Migration("20220116175230_Tree")]
    partial class Tree
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Drzewo.Models.Node", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Depth")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(24)
                        .HasColumnType("nvarchar(24)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Nodes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Depth = 1,
                            Name = "Program Files"
                        },
                        new
                        {
                            Id = 2,
                            Depth = 1,
                            Name = "Programy"
                        },
                        new
                        {
                            Id = 3,
                            Depth = 1,
                            Name = "Projekty"
                        },
                        new
                        {
                            Id = 4,
                            Depth = 2,
                            Name = "Adobe",
                            ParentId = 1
                        },
                        new
                        {
                            Id = 5,
                            Depth = 2,
                            Name = "Microsoft",
                            ParentId = 1
                        },
                        new
                        {
                            Id = 6,
                            Depth = 3,
                            Name = "Windows Defender",
                            ParentId = 5
                        },
                        new
                        {
                            Id = 7,
                            Depth = 3,
                            Name = "Azure",
                            ParentId = 5
                        },
                        new
                        {
                            Id = 8,
                            Depth = 3,
                            Name = "Temp",
                            ParentId = 5
                        },
                        new
                        {
                            Id = 9,
                            Depth = 2,
                            Name = "MPC HC",
                            ParentId = 2
                        },
                        new
                        {
                            Id = 10,
                            Depth = 2,
                            Name = "HoneyView",
                            ParentId = 2
                        });
                });

            modelBuilder.Entity("Drzewo.Models.Node", b =>
                {
                    b.HasOne("Drzewo.Models.Node", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Drzewo.Models.Node", b =>
                {
                    b.Navigation("Children");
                });
#pragma warning restore 612, 618
        }
    }
}
